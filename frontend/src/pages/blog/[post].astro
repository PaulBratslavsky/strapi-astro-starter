---
import type Article from "../../interfaces/articles";
import { generateCloudinaryURL } from "../../lib/generate-cloudinary-url";
import {
  Breadcrumbs,
  BreadcrumbsItem,
  Media,
} from "accessible-astro-components";
import { getStrapiMedia } from "../../lib/api-helpers";
import fetchApi from "../../lib/strapi";
import { marked } from 'marked';
import MarkdownLayout from "../../layouts/MarkdownLayout.astro";

export async function getStaticPaths() {
  const articles = await fetchApi<Article[]>({
    endpoint: "articles?populate=image",
    wrappedByKey: "data",
  });

  return articles.map((article: Article) => {
    return {
      params: { post: article.attributes.slug },
      props: { article },
    };
  });
}

const { article } = Astro.props;
const { title, description, content, slug, image } = article.attributes;
const imageUrl = getStrapiMedia(image.data.attributes.formats.medium.url);
const optimized = generateCloudinaryURL(imageUrl);

---

<MarkdownLayout title={title} description={description} url={slug}>
  <div class="container">
    <div class="mt-12">
      <Breadcrumbs>
        <BreadcrumbsItem href="/" label="Home" />
        <BreadcrumbsItem href="/blog" label="Blog" />
        <BreadcrumbsItem currentPage={true} label={slug} />
      </Breadcrumbs>
    </div>
  </div>
  <section class="my-12">
    <div class="mb-8 rounded-xl overflow-hidden">
      <img
        class="w-full h-auto"
        src={optimized}
        alt=""
        loading="lazy"
      />
    </div>

    <div class="container">
      <h1>{title}</h1><br />
      <p>By userId: {article.id}</p>
    </div>
  </section>
  <section class="my-12">
    <article class="container rich-text">
      <div set:html={marked.parse(content)} />
    </article>
  </section>
</MarkdownLayout>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
