---
import type Page from "../interfaces/page";
import fetchApi from "../lib/strapi";
import qs from "qs";

const query = qs.stringify({
  filters: {
    slug: "home-page",
  },
  populate: {
    sections: {
      populate: {
        image: {
          fields: ["formats", "url"],
        },
        link: {
          populate: true,
        },
        card: {
          populate: true,
        }
      },
    },
  },
});

import DefaultLayout from "../layouts/DefaultLayout.astro";
import Hero from "../components/Hero.astro";
import Features from "../components/Features.astro";
import Counter from "../components/Counter.astro";
import ContentMedia from "../components/ContentMedia.astro";

const page = await fetchApi<Page[]>({
  endpoint: "pages?" + query,
  wrappedByKey: "data",
});

if (!page) return Astro.redirect('/404');
const data = page[0]?.attributes;

---

<DefaultLayout title="Home">
  {
    data.sections &&
      data.sections.map((section: any) => {
        if (section.__component === "layout.hero")
          return <Hero data={section} />;
        if (section.__component === "layout.card-row")
          return <Features data={section} />;
        return null;
      })
  }

  <ContentMedia imgSrc="/accessible-components.webp">
    <h2>Accessible Components</h2>
    <p class="text-2xl">
      This theme provides plenty of tried and tested Accessible Astro
      Components. Some are native to this theme and a lot of others are
      integrated using a <a
        href="https://github.com/markteekman/accessible-astro-components"
        >separate package</a
      >. They'll get you up and running in building an accessible solution for
      your visitors.
    </p>
  </ContentMedia>
  <ContentMedia imgSrc="/wcag-compliant.webp" reverseImg={true}>
    <h2>WCAG 2.1 AA Compliant</h2>
    <p class="text-2xl">
      Using semantic HTML, landmarks, skip links, screen reader friendly
      content, aria-labels, keyboard accessible navigation and components, clear
      outlines and tab indicators and the right color contrast, you're more
      certain of reaching WCAG AA compliance.
    </p>
  </ContentMedia>
  <section class="mt-64 mb-32">
    <div class="container">
      <h2 class="mb-16 text-6xl">Counters</h2>
      <div class="grid grid-cols-1 gap-12 sm:grid-cols-2 md:grid-cols-4">
        <Counter count="130" title="Stars" sub="On GitHub" />
        <Counter count="17" title="Accessible" sub="Components" />
        <Counter count="500" title="Commits" sub="Merged" />
        <Counter count="18+" title="Months" sub="Since launch" />
      </div>
    </div>
  </section>
</DefaultLayout>
